version: "3"

services:
  backend:
    build:
      context: .
      dockerfile: ./docker/backend/Dockerfile
    volumes:
      - ./backend:/backend
      - audio:/backend/audio
    tty: true
    restart: always
    ports:
      - 5000:5000
    depends_on:
      - db

  voicevox_engine:
    # CPUの場合は voicevox/voicevox_engine:cpu-ubuntu20.04-latest を使用
    image: voicevox/voicevox_engine:cpu-ubuntu20.04-latest
    ports:
      - "50021:50021"
    tty: true

  frontend:
    build:
      context: .
      dockerfile: ./docker/frontend/Dockerfile
    volumes:
      - ./frontend:/frontend
      - node:/frontend/node_modules
      - audio:/frontend/src/assets/audio
    env_file:
      - ./docker/env/goo.env
    tty: true
    ports:
      - 3000:3000
    depends_on:
      - db

  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - 80:80
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
    tty: true
    depends_on:
      - frontend
      - backend
      - voicevox_engine
      - db
  db:
    image: postgres:15.1-alpine
    command: -c 'config_file=/etc/postgresql/postgresql.conf'
    env_file:
      - docker/env/db.env
    volumes:
      - ./db/postgres_data:/var/lib/postgresql/data
      - ./db/init:/docker-entrypoint-initdb.d
      - ./db/config/postgresql.conf:/etc/postgresql/postgresql.conf
    ports:
      - 5432:5432
    tty: true
    restart: always

volumes:
  node:
  audio:
    driver: "local"
